name: Release Docker Image & GitHub Release

# Trigger workflow on tag push (Semantic Versioning)
on:
  push:
    tags:
      - '*.*.*'

# Required permissions to create GitHub release
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/devcontainer

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Write ZScaler certificate from secret
      - name: Inject ZScaler cert
        run: |
          mkdir -p devcontainer/certs
          echo "${{ secrets.ZSCALER_ROOT_CERT }}" > devcontainer/certs/zscaler-root.crt

      # Docker Hub login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image
      - name: Build & Push Docker image
        run: |
          # Strip refs/tags/ from Git ref
          TAG=${GITHUB_REF_NAME#refs/tags/}
          echo "Using tag: $TAG"

          pushd devcontainer
          docker build \
            --build-arg CERT_PATH=certs/zscaler-root.crt \
            -t $DOCKER_IMAGE:$TAG \
            -t $DOCKER_IMAGE:latest .
          docker push $DOCKER_IMAGE:$TAG
          docker push $DOCKER_IMAGE:latest
          popd

      # 5️⃣ Set up Git (optional)
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      # 6️⃣ Create GitHub release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generateReleaseNotes: true
          draft: false
          prerelease: false
          token: ${{ secrets.PAT_TOKEN }}

